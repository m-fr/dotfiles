;;;;;;; VARIABLES ;;;;;;;

(defvar showCores false)

(defpoll brightness
    :interval "1s"
    :initial 0
    `brightnessctl | grep % | cut -d'(' -f2 | cut -d'%' -f1`
)

(defpoll volume
    :interval "1s"
    :initial 0
    `amixer get Master | grep 'Left:' | cut -d'[' -f2 | cut -d'%' -f1`
)

(defpoll unmute
    :interval "1s"
    :initial 0
    `amixer get Master | grep 'Left:' | cut -d'[' -f3 | cut -d']' -f1`
)

;;;;;;; WIDGETS   ;;;;;;;

(defwidget metric [class label value ?onchange ?maxValue]
    (box
        :class "box"
        :orientation "h"
        :space-evenly true
        (circular-progress
            :class class
            :start-at 25
            :clockwise false
            :thickness 5
            :tooltip {value == 'x' ? 0 : value}
            :value {value == 'x' ? 0 : value}
            (label
                :class "icon"
                :text label
            )
        )
    )
)

(defwidget sys[]
    (box
        :orientation "v"
        :space-evenly true
        :class "sys"
        (box
            :orientation "h"
            :space-evenly true
            (metric :class "cpu_bar" :label "" :value {EWW_CPU.avg})
            (metric :class "mem_bar" :label "" :value {EWW_RAM.used_mem_perc})
            (metric :class "disk_bar" :label "" :value {EWW_DISK["/"].used_perc})
        )
        (box
            :orientation "h"
            :space-evenly true
            (metric :class "bright_bar" :label "" :value brightness)
            (metric
                :class "vol_bar ${unmute == 'off' ? 'mute' : ''}"
                :label {unmute == "off" ? "" :
                    volume > 50 ? "" :
                    volume > 0 ? "" : ""
                }
                :value volume
            )
            (metric
                :class "bat_bar"
                :label {EWW_BATTERY["BAT0"].status == "Discharging" ?
                    EWW_BATTERY["BAT0"].capacity > 90 ? "" :
                    EWW_BATTERY["BAT0"].capacity > 60 ? "" :
                    EWW_BATTERY["BAT0"].capacity > 30 ? "" :
                    EWW_BATTERY["BAT0"].capacity > 10 ? "" : "" :
                    EWW_BATTERY["BAT0"].status == "Charging" ? "" : ""
                }
                :value {EWW_BATTERY["BAT0"].capacity}
            )
        )
    )
)

