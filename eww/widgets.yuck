(include "variables.yuck")
(include "bspwm.yuck")
(include "vmware.yuck")
(include "app.yuck")

(defwidget metric [class label value onchange ?maxValue]
    (box
        :orientation "h"
        :space-evenly false
        :class class
        (box
            :class "icon" 
            label
        )
        (scale
            :min 0
            :max {maxValue ?: 100}
            :value value
            :active {onchange != ""}
            :onchange onchange
        )
    )
)

(defwidget clock[]
    (box
        :class "clock box"
        (label :class "time" :text time)
    )
)

(defwidget date[]
    (box
        :class "box"
        :orientation "v"
        :space-evenly false
        (button
            :class "date"
            :onclick "eww update showCal=${ showCal ? false : true }"
            date)
        (revealer
            :reveal showCal
            :transition "slidedown"
            (calendar
                :class "calendar"
                :day day
                :month {month - 1}
                :year year
            )
        )
    )
)

(defwidget sys[]
    (box
        :orientation "v"
        :space-evenly false
        :halign "end"
        :class "sys box"
        (metric :class "cpu_bar" :label "" :value {EWW_CPU.avg} :onchange "")
        (metric :class "mem_bar" :label "" :value {EWW_RAM.used_mem_perc} :onchange "")
        (metric :class "disk_bar" :label "" :value {EWW_DISK["/"].used_perc} :onchange "")
        (metric :class "bright_bar" :label "" :value brightness :onchange "")
        (metric :class "vol_bar" :label "" :value volume :onchange "")
        (metric :class "bat_bar" :label "" :value {EWW_BATTERY["BAT0"].capacity} :onchange "")
    )
)

(defwidget keyboard[]
    (box
        :orientation "h"
        :class "keyboard"
        :space-evenly false
        (box
            :space-evenly false
            :class "box"
            (box :class "icon" "")
            (box :class "kb icon" kb)
        )
        (box
            :class "box icon ${caps == 'off' ? 'inactive' : ''}"
            ""
        )
    )
)

(defwidget powermenu[]
    (box
        :orientation "v"
        :space-evenly false
        :class "menu"
        (box
            :orientation "h"
            :space-evenly false
            (box
                :class "box"
                (button
                    :onclick "power poweroff"
                    :class "icon btn stop"
                    ""
                )
            )
            (box
                :class "box"
                (button
                    :onclick "power reboot"
                    :class "icon btn reset"
                    ""
                )
            )
            (box
                :class "box"
                (button
                    :onclick "power suspend"
                    :class "icon btn suspend"
                    ""
                )
            )
            (box
                :class "box"
                (button
                    :onclick "power logout"
                    :class "icon btn pause"
                    ""
                )
            )
            (box
                :class "box"
                (button
                    :onclick "power lock"
                    :class "icon btn run"
                    ""
                )
            )
        )
    )
)

(defwidget info[]
    (box
        ;:class "info box"
    )
)

